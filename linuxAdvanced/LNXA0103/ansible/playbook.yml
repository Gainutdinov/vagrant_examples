---

#### Напишите конфигурационный файл nginx, взяв за основу конфигурацонный файл из предыдущего задания, который реализует следующую функциональность:
####
#### Отключен модуль mail.
#### Должен быть реализован конфиг для default_server, описанный в описании.
#### В отдельном конфигурационном файле должен быть описан server, который слушает на 80 порту и использует домен, полученный при помощи сервиса http://xip.io/.
#### Используется формат логов с именем logz, который содержит только информацию о том, откуда был произведен запрос, в какое время, какой был произведен запрос и какой HTTP код был возвращен при запросе.
#### Логи должны писаться в файл `/var/log/nginx/xip.access.log.
#### Разрешены обращения со всех хостов, кроме 10.10.10.10.
#### Для всех путей используется basic auth с пользователем rebrain и паролем linux, кроме /noauth/*.
#### В роли root используется /var/www/html/.
#### В роли index - /var/www/html/index.nginx-debian.html, которая должна возвращаться при обращении к /.
#### Путь /rbm_images/* должен отдавать файлы из /var/www/rebrain/images/, в котором должен быть расположен файл http://rebrainme.com/files/logo_rebrain_black.png под именем logo.png.
#### Запрос на /example/ должен проксироваться на https://example.com/, обращение к которому производится через upstream.
#### Запрос на /browser/ должен возвращать сообщение типа Hello, $browser, где $browser строится на базе User Agent по регулярному выражению. Как пример, обращение из Firefox должно использовать как значение Firefox, а любой неизвестный вариант - Noname.
####

- hosts: server1
  become: true
  tasks:
  - name: Установите пакет nginx-full,apache2-utils,python3-pip.
    apt:
      pkg: 
      - nginx-full
      - php7.4-fpm
      - vim-nox
      update_cache: yes

  - name: Create directory /var/www/phpinfo
    file:
      dest: /var/www/phpinfo
      owner: www-data
      group: www-data
      state: directory

  - name: Download php file
    get_url:
      url: http://rebrainme.com/files/logo_rebrain_black.png
      dest: /var/www/rebrain/images/logo.png 
      mode: '0644'

  - name: Install passlib python package
    pip:
      name: passlib

  - name: Отключен модуль mail.
    file:
      path: /etc/nginx/modules-enabled/50-mod-mail.conf
      state: absent

  - name: Create directory /var/www/rebrain/images/
    file:
      dest: /var/www/rebrain/images
      owner: root
      group: root
      state: directory

  - name: Download rebrain logo
    get_url:
      url: http://rebrainme.com/files/logo_rebrain_black.png
      dest: /var/www/rebrain/images/logo.png 
      mode: '0644'

  - name: Put a new nginx file
    get_url:
      url: http://rebrainme.com/files/logo_rebrain_black.png
      dest: /var/www/rebrain/images/logo.png 
      mode: '0644'

  - name: Template a file to /etc/nginx/sites-enabled/default
    vars:
      domain: '157.230.30.66.nip.io'
    ansible.builtin.template:
      src: ./default.j2
      dest: /etc/nginx/sites-enabled/default
      owner: root
      group: root
      mode: '0644'

  - name: Add a user to a password file and ensure permissions are set
    htpasswd:
      path: /etc/nginx/passwdfile
      name: rebrain
      password: 'linux'
      owner: root
      group: www-data
      mode: 0640
 
  - name: Restart nginx
    service: name=nginx state=restarted 

  - name: check_mode example
    command:
      cmd: cat /etc/nginx/sites-enabled/default
    register: nginx_conf

  - name: Output /etc/nginx/sites-enabled/default
    debug:
      msg: Nginx.conf file has content {{ nginx_conf }}
  
