Задание:
1. На тестовой VM (2 vCPU) ознакомьтесь с окружением:
○ выполните команду, которая покажет модель CPU и базовую частоту ядра;
○ выполните команду, которая выводит список всех поддерживаемых ECC
кривых, отфильтруйте алгоритмы с длиной ключа 256 бит. Вывод команд
приложите в ответ к заданию.
2. Сгенерируйте самоподписной сертификат RSA 3072bit.
3. Сгенерируйте самоподписной сертификат ECDSA prime256v1.
4. Протестируйте скорость создания подключений для RSA:
○ Запустите OpenSSL s_server с ранее сгенерированным RSA сертификатом и
ключом в фоновом режиме и перенаправлением std в /dev/null.
○ Выполните тест скорости подключения при помощи OpenSSL s_time,
запустив клиента на той же ВМ. Последние 2 строки вывода OpenSSL s_time
приложите в ответ к заданию.
○ Во время выполнения теста обратите внимание на утилизацию CPU
процессами OpenSSL s_server и OpenSSL s_time. Выпишите среднюю
утилизацию в ответ к заданию для каждого процесса.
5. Протестируйте скорость создания подключений для ECDSA:
○ Запустите OpenSSL s_server с ранее сгенерированным prime256v1
сертификатом и ключом в фоновом режиме и перенаправлением std в
/dev/null.
○ Выполните тест скорости подключения при помощи OpenSSL s_time,
запустив клиента на той же ВМ. Последние 2 строки вывода OpenSSL s_time
приложите в ответ к заданию.
○ Во время выполнения теста обратите внимание на утилизацию CPU
процессами OpenSSL s_server и OpenSSL s_time. Выпишите среднюю
утилизацию в ответ к заданию для каждого процесса.
6. На основании полученных данных в п.5 и п.6. сделайте вывод о целесообразности
использования ECC для потенциального увеличения пропускной способности
сервера при операции TLS HandShake.
