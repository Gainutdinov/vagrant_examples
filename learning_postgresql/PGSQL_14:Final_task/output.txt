Задание:

Описание:

Вы дошли до финального задания — отлично!

Но не будем сейчас терять время, ибо время — деньги! Сразу в бой!
Задание:

Вы являетесь DBA в компании REBRAIN! Ваше начальство получило грант от PostgreSQL Professional, который может принести хороший доход компании.

Задача — протестировать самую свежую на момент выполнения задания версию PostgreSQL, развернув базу данных ведущего проекта компании в современном отказоустойчивом кластере PostgreSQL. Кластер должен быть оснащен по последнему слову техники для highload:

    Кластер — схема (10 машин):

task14_scheme.jpg

    Потоковая репликация:
        мастер = leader (patroni)
        3 реплики:
            1 — в синхронном режиме;
            2 — в асинхронном режиме;
            3 — в ждущем режиме — резерв .

Условие:

    в случае падения мастера -> сначала переход на реплику с синхронной репликацией (приоритет);
    в случае, если в течение 3 минут не поднялся мертвый инстанс предыдущего мастера, -> ввод резерва.

    patroni (управление кластером) + etcd (хранилище состояния кластера)
    HAproxy на входе, баланс между двумя pgbouncer:

    порт 6432;
    roundrobin balancer.

    pgbouncer — 2 инстанса.

Настройки: - pgbouncer должен подключаться к базе данных "rebrain_courses_db" с именем пользователя "rebrain_admin"; - pgbouncer использует порт 6432; - получает информацию о кластере из etcd; - pool_mode = transaction; - max_client_conn = 2500; - default_pool_size = 50.

    Сервер мониторинга — Prometheus. Для него со всех машин собирается информация о системных метриках (node_exporter) и информация о состоянии кластера (опрашивается мастер через postgres_exporter).

    Для отображения метрик — Grafana и для нее 2 дашборда:

    системные метрики — 1860;
    postgres — 9628.

Условие: настройки по времени для отображения графиков на всех дашбордах — 30 минут.

    Разместите базу данных "rebrain_courses_db" (используйте backup из задания 4. Файл rebrain_courses_db_task04.sql.bqp). Для работы с базой данных создайте пользователя "rebrain_admin". Выдайте все права пользователю "rebrain_admin" на базу данных "rebrain_courses_db".

    Проведите 3 нагрузочных теста: a. pg_bench — средняя нагрузка:
        порт 6432;
        500 конкурентных клиентов в 5 потоков;
        180 секунд. b. pg_bench — высокая нагрузка:
        порт 6432;
        5000 конкурентных клиентов в 25 потоков;
        180 секунд. c. pg_bench — высокая нагрузка + убитый мастер:
        порт 6432;
        5000 конкурентных клиентов в 25 потоков;
        180 секунд;
        во время теста убейте мастера, посмотрите, что произойдет.

    Если уверены, что все выполнили верно, отправляйте задание на проверку.

