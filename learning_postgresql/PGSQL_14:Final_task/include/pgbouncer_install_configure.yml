- name: install pgbouncer
  become: yes
  ansible.builtin.apt:
    pkg:
    - pgbouncer
    - postgresql-client-common
    - jq
    update_cache: yes
    state: latest

- name: configure pgbouncer
  ansible.builtin.lineinfile:
    path: "/etc/pgbouncer/pgbouncer.ini"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - { regexp: "^auth_type = trust",        line: "auth_type = md5" }
    - { regexp: "^;pool_mode = session",     line: "pool_mode = transaction" }
    - { regexp: "^;max_client = 100",        line: "max_client_conn = 2500" }
    - { regexp: "^;default_pool_size = 20",  line: "default_pool_size = 50" }
    - { regexp: "^;foodb =",                 line: "rebrain_courses_db = host=localhost port=5432 user=rebrain_monitoring password=password" }

- name: Create a directory if it does not exist /usr/local/scripts
  ansible.builtin.file:
    path: /usr/local/scripts
    state: directory
    mode: '0755'

- name: Another symbolic mode example, adding some permissions and removing others
  ansible.builtin.copy:
    src: templates/
    dest: /etc/foo.conf
    owner: foo
    group: foo
    mode: u+rw,g-wx,o-rwx

- name: Template a file to /usr/local/scripts
  ansible.builtin.template:
    src: templates/pgbouncer_script.sh.j2
    dest: /usr/local/scripts/pgbouncer_script.sh
    owner: postgres
    group: postgres
    mode: '0755'

- name: Creates a cron job for pgbouncer configuration for every minute
  ansible.builtin.cron:
    name: check patroni leader ip and reconfigure pgbouncer if needed
    minute: "*"
    user: root
    job: "/usr/local/scripts/pgbouncer_script.sh"

#- name: add /etc/hosts entries for pgbouncer
#  lineinfile:
#    path: "/etc/hosts"
#    line:  "{{ item }}"
#    state: present
#  loop:
#     - "{{ hostvars['pgsql-replica-0'].ansible_host }} rebrain-postgres-node-0"
#     - "{{ hostvars['pgsql-replica-1'].ansible_host }} rebrain-postgres-node-1"
#     - "{{ hostvars['pgsql-replica-2'].ansible_host }} rebrain-postgres-node-2"
#     - "{{ hostvars['pgsql-replica-3'].ansible_host }} rebrain-postgres-node-3"

restapi:
  listen: {{ ansible_host }}:8008 # адрес той ноды, в которой находится этот файл
  connect_address: {{ ansible_host }}:8008 # адрес той ноды, в которой находится этот файл

etcd:
  hosts: {{ hostvars['etcd-1'].ansible_host }}:2379, {{ hostvars['etcd-2'].ansible_host }}:2379, {{ hostvars['etcd-3'].ansible_host }}:2379 # перечислите здесь все ваши ноды, в случае если вы устанавливаете etcd на них же


- name: add entry for userlist
  ansible.builtin.lineinfile:
    path: "/etc/pgbouncer/userlist.txt"
    line: '"rebrain_admin" "password"'

- name: restart service pgbouncer.service
  systemd:
    state: restarted
    daemon_reload: yes
    name: pgbouncer.service


