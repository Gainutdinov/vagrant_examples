- hosts: all
  become: yes
  gather_facts: yes
  vars:
    max_clients: 200
    publisher_IP: "{{ hostvars['publisher'].ansible_host }}"
    subscriber_IP:  "{{ hostvars['subscriber'].ansible_host }}"
  tasks:
  - name: Apply tags to tasks within included file
    include_tasks:
      file: include/ssh_append.yml
  - name: Install Postgres Ubuntu 18_04
    block:
      - name: 2_ubuntu
        ansible.builtin.apt_key:
          url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
          state: present
      - name: 3_ubuntu
        ansible.builtin.apt_repository:
          repo: deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main
          filename: pgdg
          state: present
      - name: Wait for automatic system updates
        become: yes
        shell:  while sudo fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; do sleep 1; done;
      - name: install 4_ubuntu
        become: yes
        ansible.builtin.apt:
          pkg:
          - postgresql-11
          - postgresql-client-11
          - postgresql-contrib-11
          update_cache: yes
          state: latest
      - name: add hosts file entry
        lineinfile:
          path: "/etc/hosts"
          line:  "{{ item }}"
          state: present
        loop:
           - "{{publisher_IP}} publisher"
           - "{{subscriber_IP}}  subscriber"
    
  - name: create role car_portal_app
    become: yes
    become_user: postgres
    shell: |
      psql -U postgres --dbname=postgres --command 'CREATE ROLE car_portal_app WITH LOGIN;'
      psql -U postgres --dbname=postgres --command 'ALTER ROLE car_portal_app REPLICATION;'
    when: inventory_hostname == 'publisher'

  - name: add entry for pg_hba.conf
    lineinfile:
      path: "/etc/postgresql/11/main/pg_hba.conf"
      line:  "{{ item }}"
      state: present
    loop:
      - "### publisher"
      - "host    all             car_portal_app        0.0.0.0/0        trust"
    when: inventory_hostname == 'publisher'

  - name: allow all interfaces configure postgresql.conf
    ansible.builtin.lineinfile:
      path: "/etc/postgresql/11/main/postgresql.conf"
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
    loop:
      - { regexp: "^#listen_addresses = 'localhost'", line: "listen_addresses = '*'          # what IP address(es) to listen on;"}
      - { regexp: "^#wal_level = replica", line: "wal_level = logical      # minimal, replica, or logical"}
    when: inventory_hostname == 'publisher'
              
  - name: restart postgres
    shell: |
      systemctl restart postgresql@11-main.service
    when: inventory_hostname == 'publisher'

  - name: import postgres
    become: yes
    become_user: postgres
    shell: |
      psql --username postgres -f /opt/schema.sql
      psql --username postgres -f /opt/data.sql
    when: inventory_hostname == 'publisher'

  - name: create publication
    become: yes
    become_user: postgres
    shell: |
      psql --username postgres --dbname=car_portal --command='CREATE PUBLICATION car_portal FOR ALL TABLES;'
    when: inventory_hostname == 'publisher'

  - name: Subscriber starts
    ansible.builtin.debug:
      msg:
      - "Provisioning subscriber host"

  - name: create role car_portal_app
    become: yes
    become_user: postgres
    shell: |
      psql -U postgres --dbname=postgres --command 'CREATE ROLE car_portal_app WITH LOGIN;'
      psql -U postgres --dbname=postgres --command 'ALTER ROLE car_portal_app REPLICATION;'
    when: inventory_hostname == 'subscriber'

  - name: add entry for pg_hba.conf
    lineinfile:
      path: "/etc/postgresql/11/main/pg_hba.conf"
      line:  "{{ item }}"
      state: present
    loop:
      - "### subscriber"
      - "host    all     car_portal_app        0.0.0.0/0        trust"
    when: inventory_hostname == 'subscriber'

  - name: allow all interfaces configure postgresql.conf
    ansible.builtin.lineinfile:
      path: "/etc/postgresql/11/main/postgresql.conf"
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
    loop:
      - { regexp: "^#listen_addresses = 'localhost'", line: "listen_addresses = '*'          # what IP address(es) to listen on;"}
#      - { regexp: "^#wal_level = replica", line: "wal_level = replica      # minimal, replica, or logical"}
    when: inventory_hostname == 'subscriber'
              
  - name: restart postgres
    shell: |
      systemctl restart postgresql@11-main.service
    when: inventory_hostname == 'subscriber'



  - name: Transfer files from publisher to subscriber
    block:
      - name: fetch files from publisher
        ansible.builtin.fetch:
          src: "/opt/{{ item }}"
          dest: "/tmp/{{ item }}"
          flat: yes
        loop:
          - "schema.sql"
          - "data.sql"
        when: inventory_hostname == 'publisher'
      - name: send files from subscriber
        ansible.builtin.copy:
          src: "/tmp/{{ item }}"
          dest: "/opt/{{ item }}"
          owner: user
          group: user
          mode: '0644'
        loop:
          - "schema.sql"
          - "data.sql"
        when: inventory_hostname == 'subscriber'
              
  - name: restore schema for subscriber
    become: yes
    become_user: postgres
    shell: |
      psql --username postgres -f /opt/schema.sql
    when: inventory_hostname == 'subscriber'

  - name: create subscription
    become: yes
    become_user: postgres
    shell: |
      psql --username postgres  --dbname=car_portal --command="CREATE SUBSCRIPTION car_portal CONNECTION 'dbname=car_portal host={{ publisher_IP }} user=car_portal_app' PUBLICATION car_portal;"
    when: inventory_hostname == 'subscriber'

#Add random entry in order to check replication 
  - name: Check replication
    become: yes
    become_user: postgres
    shell: |
      psql --username postgres  --dbname=car_portal --command="SET search_path to car_portal_app;SET role car_portal_app;insert into account values (default, 'Rebrain','me','info@rebrainme.com', md5('info@rebrainme.com'));"
    when: inventory_hostname == 'publisher'


#На стороне подписчика следует создать подписку. Это специальный объект, описывающий подключение к существующей публикации издателя. Подписка создается командой CREATE SUBSCRIPTION, как показано в примере ниже:
#task07=# CREATE SUBSCRIPTION task07 CONNECTION 'dbname=task07 host=publisher user=db_role' PUBLICATION task07;
#CREATE SUBSCRIPTION


