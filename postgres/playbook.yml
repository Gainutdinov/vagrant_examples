---
- hosts: db01
  become: yes
  vars:
    http_port: 80
    max_clients: 200
#    - role: geerlingguy.postgresql
#  roles:
  tasks:
  - name: Example from an Ansible Playbook
    ansible.builtin.ping:
  - name: Install python3-psycopg2
    dnf:
      name: 
       - python3-psycopg2-2.7.5-7.el8.x86_64
       - vim
      state: present

  - name: Disable SELinux
    selinux:
      state: disabled

  - name: install postgresql:10
    include_role:
      name: geerlingguy.postgresql

  - name: file to rewrite  systemd unit file
    ansible.builtin.file:
      path: /etc/systemd/system/postgresql.service.d
      state: directory
      recurse: yes
      mode: 0644

  - name: rewrite PGDATA env
    ansible.builtin.copy:
      dest: /etc/systemd/system/postgresql.service.d/override.conf
      content: |
        [Service]
        Environment=PGDATA=/mnt/db/db01
      mode: 0644


  - name: add permissions for directory
    ansible.builtin.file:
      path: /mnt/db
      owner: root 
      group: root
      state: directory
      mode: 0755

  - name: Recursively change ownership of a directory
    ansible.builtin.file:
      path: /mnt/db/db01
      owner: postgres 
      group: postgres
      state: directory
      mode: 0700

  - name: Just force systemd to reread configs 
    ansible.builtin.systemd:
      daemon_reload: yes

#  - name: collect facts about system services
#    service_facts:
#    register: services_state
#  
#  - name: Debug
#    debug:
#      var: services_state
#
  - name: register postgres
    shell: systemctl status postgresql
    register: postgres_service_output

#  - name: output postgres
#    debug: 
#      var: postgres_service_output.stdout

  - name: store the statistics of /mnt/db/db01 
    find:
      paths: /mnt/db/db01
      file_type: directory
    register: folder_stat

#  - name: output folder stats
#    debug: 
#      var: folder_stat

  - name: Initialize postgres data_dir
    shell: /usr/bin/postgresql-setup --initdb
    args:
      executable: /bin/bash
    when: 
      - '"-D /mnt/db/db01" not in postgres_service_output.stdout'
      - folder_stat.examined == 0

  - name: restart postgresql service
    ansible.builtin.systemd:
      name: postgresql
      state: restarted

  - name: listen_address change
    ansible.builtin.lineinfile:
      path: /mnt/db/db01/postgresql.conf
      regexp: "^#listen_addresses = 'localhost'"
      line: "listen_addresses = '*'          # what IP address(es) to listen on;"
    when: "inventory_hostname == 'db01'"

  - name: wal_level change
    ansible.builtin.lineinfile:
      path: /mnt/db/db01/postgresql.conf
      regexp: "^#wal_level = replica"
      line: "#wal_level = replica                     # minimal, replica, or logical"
    when: "inventory_hostname == 'db01'"

  - name: synchronous_commit change
    ansible.builtin.lineinfile:
      path: /mnt/db/db01/postgresql.conf
      regexp: "^#synchronous_commit = on"
      line: "synchronous_commit = on                 # synchronization level;"
    when: "inventory_hostname == 'db01'"

  - name: max_wal_senders change
    ansible.builtin.lineinfile:
      path: /mnt/db/db01/postgresql.conf
      regexp: "^#max_wal_senders = 10"
      line: "max_wal_senders = 10            # max number of walsender processes"
    when: "inventory_hostname == 'db01'"

  - name: wal_keep_segments change
    ansible.builtin.lineinfile:
      path: /mnt/db/db01/postgresql.conf
      regexp: "^#wal_keep_segments = 0"
      line: "wal_keep_segments = 10            # in logfile segments, 16MB each; 0 disables"
    when: "inventory_hostname == 'db01'"
  
  - name: synchronous_standby_names change
    ansible.builtin.lineinfile:
      path: /mnt/db/db01/postgresql.conf
      regexp: "^#synchronous_standby_names = ''"
      line: "synchronous_standby_names = '*' # standby servers that provide sync rep "
    when: "inventory_hostname == 'db01'"
  
  - name: synchronous_standby_names change
    ansible.builtin.lineinfile:
      path: /mnt/db/db01/postgresql.conf
      regexp: "^#synchronous_standby_names = ''"
      line: "synchronous_standby_names = '*' # standby servers that provide sync rep "
    when: "inventory_hostname == 'db01'"

  - name: Comment 1st
    ansible.builtin.replace:
      dest: /mnt/db/db01/pg_hba.conf
      regexp: '^host    replication     all             127.0.0.1/32            ident'
      replace: '#host    replication     all             127.0.0.1/32            ident'
    when: "inventory_hostname == 'db01'"
  
  - name: Comment 2nd
    ansible.builtin.replace:
      dest: /mnt/db/db01/pg_hba.conf
      regexp: '^host    replication     all             ::1/128                 ident'
      replace: '#host    replication     all             ::1/128                 ident'
    when: "inventory_hostname == 'db01'"

  - name: Add a line to a file if the file does not exist with rep_user
    ansible.builtin.lineinfile:
      path: /mnt/db/db01/pg_hba.conf
      line: "{{ item }}"
    loop:
       - 'host    replication     rep_user        172.172.2.62/32            md5'
       - 'host    replication     rep_user        172.172.2.63/32            md5'
       - 'host    replication     rep_user        172.172.31.62/32           md5'
       - 'host    replication     rep_user        172.172.31.63/32           md5'




