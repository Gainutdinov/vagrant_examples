# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  number_of_machines = 2
  box_name = "generic/ubuntu2004"
  
  base_ip = 100
  base_ip_addresses = "192.168.1"
  
  ip_addresses = (1..number_of_machines).map{ |i| "#{base_ip_addresses}.#{base_ip + i}" }
  
  script = <<-SCRIPT
    echo "hello world"
  SCRIPT
  
  config.vm.provider "virtualbox" do |v|
    v.memory = 1024
  end
  
  (1..number_of_machines).each do |i|
    config.vm.define "box_#{i}" do |box|
      box.vm.box = box_name
      box.vm.network "private_network", ip: "#{ip_addresses[i-1]}",virtualbox__intnet: "mynetwork"
      #box.vm.disk :disk, name: "backup_#{i}", size: "2GB"
  
      box.vm.provision "shell", inline: "#{script}"
      box.vm.hostname = "server#{i}"
      #box.vm.network "forwarded_port", guest: 80, host: "808#{i}"
      if "box_#{i}"  == "box_1" then
        box.vm.provision "file", source: "/home/mgaynutdinov/ubuntu-20.10-live-server-amd64.iso", destination: "/tmp/ubuntu-20.10-live-server-amd64.iso"
        box.vm.provision "shell", inline: "sudo apt-get update"
        box.vm.provision "shell", inline: "apt-get install -y syslinux-common pxelinux"
        box.vm.provision "shell", inline: "apt-get install -y tftpd-hpa isc-dhcp-server"
        box.vm.provision "shell", inline: "apt-get install -y apache2"
        box.vm.provision "shell", inline: 'sed -i "s/INTERFACESv4=\"\"/INTERFACESv4=\"eth1\"/g" /etc/default/isc-dhcp-server'
        script2 = <<-SCRIPT
          echo "hello world"
          cat <<EOT >> /etc/dhcp/dhcpd.conf
          subnet 192.168.1.0 netmask 255.255.255.0 {
            range 192.168.1.102 192.168.1.200;
            option routers 192.168.1.101;
            #filename "/srv/tftp/boot/bios/pxelinux.0"; #USE RELATIVE PATH TO TFTP SERVER
            filename "boot/bios/pxelinux.0";
            }
          EOT
        SCRIPT
	box.vm.provision "shell", path: "./script_1.sh"
        box.vm.provision "shell", inline: 'systemctl restart isc-dhcp-server'
      end
    end
  end

end
