Задание:
1. Остановите контейнер с PostgreSQL-server.

```
cd /mnt/HC_Volume_18364365/zabbix-docker
docker stop zabbix-docker_postgres-server_1
```

2. В docker-compose.yml замените образ postgres:11.7 на образ PostgreSQL c поддержкой TimescaleDB.

```
#before postgres:13-alpine
docker pull postgresai/extended-postgres:13
```

3. В конфигурационном файле postgresql.conf добавьте строку shared_preload_libraries = 'timescaledb'.

```
...
 image: postgresai/extended-postgres:13
...
```

4. Запустите контейнер с PostgreSQL-server.

```
docker-compose down
docker-compose --profile full up -d
root@coredns-slave:/mnt/HC_Volume_18364365/zabbix-docker# docker-compose ps
WARNING: The following deploy sub-keys are not supported and have been ignored: resources.reservations.cpus
WARNING: The following deploy sub-keys are not supported and have been ignored: resources.reservations.cpus
WARNING: The following deploy sub-keys are not supported and have been ignored: resources.reservations.cpus
WARNING: The following deploy sub-keys are not supported and have been ignored: resources.reservations.cpus
            Name                         Command                 State                  Ports
--------------------------------------------------------------------------------------------------------
zabbix-                        sh                             Exit 0
docker_db_data_pgsql_1
zabbix-docker_postgres-        docker-entrypoint.sh /pg_s     Up
server_1                       ...
zabbix-docker_zabbix-agent_1   /usr/bin/tini -- /usr/bin/     Up
                               ...
zabbix-docker_zabbix-          /usr/bin/tini -- /usr/bin/     Up             0.0.0.0:10051->10051/tcp
server_1                       ...
zabbix-docker_zabbix-web-      docker-entrypoint.sh           Up (healthy)   0.0.0.0:8080->8080/tcp,
nginx-pgsql_1                                                                0.0.0.0:443->8443/tcp
zabbix-docker_zabbix-web-      docker-entrypoint.sh /usr/     Up
service_1                      ...
root@coredns-slave:/mnt/HC_Volume_18364365/zabbix-docker#
```

5. Из контейнера Zabbix-Server скопируйте /share/doc/zabbix-server-postgresql/timescaledb.sql в ./zbx_env/var/lib/postgresql/data/ хостовой машины для выполнения в контейнере PostgreSQL-server.

```
docker cp zabbix-docker_zabbix-server_1:/usr/share/doc/zabbix-server-postgresql/timescaledb.sql .
cp ./timescaledb.sql ./zbx_env/var/lib/postgresql/data/

```

6. В разделе Administration → General → Housekeeping установите чекбоксы Override item history period и Override item trend period.

7. В скрипте timescaledb.sql установите период создания чанка 60 сек.

```
PERFORM create_hypertable('history', 'clock', chunk_time_interval => 60, migrate_data => true);
```

8. В контейнере PostgreSQL-server активируйте расширение TimescaleDB. (user: zabbix, password: zabbix)

```
root@coredns-slave:/mnt/HC_Volume_18364365/zabbix-docker# docker exec -ti zabbix-docker_postgres-server_1 bash
root@44cdae495c3d:/# psql -U zabbix -W
Password:

\dx #To list installed extensions

zabbix=# \c postgres
Password:
You are now connected to database "postgres" as user "zabbix".
postgres=# \dx
                 List of installed extensions
  Name   | Version |   Schema   |         Description
---------+---------+------------+------------------------------
 plpgsql | 1.0     | pg_catalog | PL/pgSQL procedural language
(1 row)

postgres=# SELECT * FROM pg_available_extensions WHERE name='timescaledb';
    name     | default_version | installed_version |                              comment

-------------+-----------------+-------------------+----------------------------------------------------------
---------
 timescaledb | 2.6.0           |                   | Enables scalable inserts and complex queries for time-ser
ies data
(1 row)

postgres=# CREATE EXTENSION IF NOT EXISTS timescaledb CASCADE;
WARNING:
WELCOME TO
 _____ _                               _     ____________
|_   _(_)                             | |    |  _  \ ___ \
  | |  _ _ __ ___   ___  ___  ___ __ _| | ___| | | | |_/ /
  | | | |  _ ` _ \ / _ \/ __|/ __/ _` | |/ _ \ | | | ___ \
  | | | | | | | | |  __/\__ \ (_| (_| | |  __/ |/ /| |_/ /
  |_| |_|_| |_| |_|\___||___/\___\__,_|_|\___|___/ \____/
               Running version 2.6.0
For more information on TimescaleDB, please visit the following links:

 1. Getting started: https://docs.timescale.com/timescaledb/latest/getting-started
 2. API reference documentation: https://docs.timescale.com/api/latest
 3. How TimescaleDB is designed: https://docs.timescale.com/timescaledb/latest/overview/core-concepts

Note: TimescaleDB collects anonymous reports to better understand and assist our users.
For more information and how to disable, please see our docs https://docs.timescale.com/timescaledb/latest/how-to-guides/configuration/telemetry.

CREATE EXTENSION
postgres=# \dx
                                      List of installed extensions
    Name     | Version |   Schema   |                            Description
-------------+---------+------------+-------------------------------------------------------------------
 plpgsql     | 1.0     | pg_catalog | PL/pgSQL procedural language
 timescaledb | 2.6.0   | public     | Enables scalable inserts and complex queries for time-series data
(2 rows)

postgres=# \c zabbix
Password:
You are now connected to database "zabbix" as user "zabbix".
zabbix=# \dx
                 List of installed extensions
  Name   | Version |   Schema   |         Description
---------+---------+------------+------------------------------
 plpgsql | 1.0     | pg_catalog | PL/pgSQL procedural language
(1 row)

zabbix=# CREATE EXTENSION IF NOT EXISTS timescaledb CASCADE;
WARNING:
WELCOME TO
 _____ _                               _     ____________
|_   _(_)                             | |    |  _  \ ___ \
  | |  _ _ __ ___   ___  ___  ___ __ _| | ___| | | | |_/ /
  | | | |  _ ` _ \ / _ \/ __|/ __/ _` | |/ _ \ | | | ___ \
  | | | | | | | | |  __/\__ \ (_| (_| | |  __/ |/ /| |_/ /
  |_| |_|_| |_| |_|\___||___/\___\__,_|_|\___|___/ \____/
               Running version 2.6.0
For more information on TimescaleDB, please visit the following links:

 1. Getting started: https://docs.timescale.com/timescaledb/latest/getting-started
 2. API reference documentation: https://docs.timescale.com/api/latest
 3. How TimescaleDB is designed: https://docs.timescale.com/timescaledb/latest/overview/core-concepts

Note: TimescaleDB collects anonymous reports to better understand and assist our users.
For more information and how to disable, please see our docs https://docs.timescale.com/timescaledb/latest/how-to-guides/configuration/telemetry.

CREATE EXTENSION
zabbix=#

```

9. В контейнере PostgreSQL-server от роли zabbix в схеме zabbix:
○ выполните запросы из timescaledb.sql;
○ выполните запрос \d+ history. Вывод поместите в ответ к заданию;
○ выполните запрос select extname, extversion, extversion from pg_extension;. Вывод поместите в ответ к заданию.



```
zabbix=# \i /var/lib/postgresql/data/timescaledb.sql;
psql:/var/lib/postgresql/data/timescaledb.sql:69: NOTICE:  PostgreSQL version 13.6 (Debian 13.6-1.pgdg110+1) is valid
psql:/var/lib/postgresql/data/timescaledb.sql:69: NOTICE:  TimescaleDB extension is detected
psql:/var/lib/postgresql/data/timescaledb.sql:69: NOTICE:  TimescaleDB version 2.6.0 is valid
psql:/var/lib/postgresql/data/timescaledb.sql:69: NOTICE:  migrating data to chunks
DETAIL:  Migration might take a while depending on the amount of data.
psql:/var/lib/postgresql/data/timescaledb.sql:69: NOTICE:  migrating data to chunks
DETAIL:  Migration might take a while depending on the amount of data.
psql:/var/lib/postgresql/data/timescaledb.sql:69: NOTICE:  migrating data to chunks
DETAIL:  Migration might take a while depending on the amount of data.
psql:/var/lib/postgresql/data/timescaledb.sql:69: NOTICE:  migrating data to chunks
DETAIL:  Migration might take a while depending on the amount of data.
psql:/var/lib/postgresql/data/timescaledb.sql:69: NOTICE:  migrating data to chunks
DETAIL:  Migration might take a while depending on the amount of data.
psql:/var/lib/postgresql/data/timescaledb.sql:69: NOTICE:  migrating data to chunks
DETAIL:  Migration might take a while depending on the amount of data.
psql:/var/lib/postgresql/data/timescaledb.sql:69: NOTICE:  TimescaleDB is configured successfully
DO
zabbix=#
zabbix=# \d+ history
                                             Table "public.history"
 Column |       Type       | Collation | Nullable |        Default        | Storage | Stats target | Descripti
on
--------+------------------+-----------+----------+-----------------------+---------+--------------+----------
---
 itemid | bigint           |           | not null |                       | plain   |              |
 clock  | integer          |           | not null | 0                     | plain   |              |
 value  | double precision |           | not null | '0'::double precision | plain   |              |
 ns     | integer          |           | not null | 0                     | plain   |              |
Indexes:
    "history_pkey" PRIMARY KEY, btree (itemid, clock, ns)
    "history_clock_idx" btree (clock DESC)
Triggers:
    ts_insert_blocker BEFORE INSERT ON history FOR EACH ROW EXECUTE FUNCTION _timescaledb_internal.insert_bloc
ker()
Child tables: _timescaledb_internal._hyper_1_1_chunk
Access method: heap

zabbix=#

zabbix=# select extname, extversion, extversion from pg_extension;
   extname   | extversion | extversion
-------------+------------+------------
 plpgsql     | 1.0        | 1.0
 timescaledb | 2.6.0      | 2.6.0
(2 rows)

```



