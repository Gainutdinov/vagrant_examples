---
- hosts: all
  become: yes
  gather_facts: yes
  vars:
    max_clients: 200
  tasks:
    - name: Apply tags to tasks within included file
      include_tasks:
        file: include/ssh_append.yml
      when: inventory_hostname in groups['etcdservers']       or 
            inventory_hostname in groups['haproxyservers']    or 
            inventory_hostname in groups['pgbouncerservers']  or 
            inventory_hostname in groups['pgsqlservers'] 

    - name: Install pgbouncer & configure
      include_tasks:
        file: include/pgbouncer_install_configure.yml
      when: inventory_hostname in groups['pgbouncerservers']

    - name: Install haproxy software & configure
      include_tasks:
        file: include/haproxy_install_configure.yml
      when: inventory_hostname in groups['haproxyservers']

    - name: Install etcdservers & configure 
      include_tasks:
        file: include/etcd_install_configure.yml
      when: inventory_hostname in groups['etcdservers']

    - name: Install pgsqlservers & configure 
      include_tasks:
        file: include/pgsqlservers_install_configure.yml
      when: inventory_hostname in groups['pgsqlservers']

    - name: Install & configure node_exporter
      include_tasks:
        file: include/node_exporter_install_configure.yml
      when: inventory_hostname in groups['etcdservers']       or 
            inventory_hostname in groups['haproxyservers']    or 
            inventory_hostname in groups['pgbouncerservers']  or 
            inventory_hostname in groups['pgsqlservers'] 
 
    - name: Install & configure prometheus, grafana
      include_tasks:
        file: include/prometheus_grafana_install_configure.yml
      when: inventory_hostname in groups['haproxyservers']

#
#    - name: Apply tags to tasks within included file
#      include_tasks:
#        file: include/ssh_append.yml
#      when:
#        - inventory_hostname in groups['etcdservers']
#        - inventory_hostname in groups['haproxyservers']
#        - inventory_hostname in groups['patroniservers']
#
#    - name: pause for 45 seconds
#      pause:
#        seconds: 45
#      delegate_to: localhost
#    - name: Get Patroni leader from Haproxy
#      shell: |
#        PGPASSWORD=admin psql -U root -h {{ hostvars['HAProxy'].ansible_host }} -p 5432 postgres --command "
#          SELECT inet_server_addr();
#        "
#      args:
#        executable: /usr/bin/bash
#      register: haproxy_output
#      when:
#        - inventory_hostname in groups['patroniservers']
#    - name: Output leader patroni server from HAProxy ip
#      ansible.builtin.debug:
#        msg: "{{ haproxy_output.stdout_lines }}"
#      when:
#        - inventory_hostname == 'patroni-1'
#
#    - name: Lastly visit HAProxy to get stats
#      ansible.builtin.debug:
#        msg: "http://{{ hostvars['HAProxy'].ansible_host }}:32700/"
#      run_once: true
#
#    - name: Last steps do manually
#      ansible.builtin.debug:
#        msg:
#        - "Убейте лидера кластера PostgreSQL, для этого остановите PostgreSQL на ноде, которая на данный момент является лидером."
#        - "Убедитесь, что Patroni произвел переключение. Узнайте IP нового лидера."
#      run_once: true
#
#
#
