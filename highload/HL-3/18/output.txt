Задание:
1. На ВМ брокера Kafka-кластера, используя утилиту kafka-topics.sh, cоздайте топик со следующими параметрами:
○ Имя — nginx-logs.
○ Replication factor — 3.
○ Количество партиций — 1.
Какой из брокеров был выбран лидером для созданного топика?

```
su - kafka
/usr/local/kafka/bin/kafka-topics.sh --create --bootstrap-server broker1:9092 --replication-factor 3 --partitions 1 --topic nginx-logs
/usr/local/kafka/bin/kafka-topics.sh --list --bootstrap-server broker1:9092
/usr/local/kafka/bin/kafka-topics.sh --describe --topic 'nginx-logs' --bootstrap-server broker1:9092
...
kafka@broker1:~$ /usr/local/kafka/bin/kafka-topics.sh --describe --topic 'nginx-logs' --bootstrap-server broker1:9092
Topic: nginx-logs       TopicId: 5gp0DYB1QFOFmYO5IOomcA PartitionCount: 1       ReplicationFactor: 3   Configs:
        Topic: nginx-logs       Partition: 0    Leader: 2       Replicas: 2,3,1 Isr: 2,3,1
# broker 2 is leader
...


2. На ВМ клиента Kafka-кластера установите модуль Python faust.

```
pip3 install faust
```

3. На ВМ клиента Kafka-кластера создайте Faust-приложение nginx_logs.py для работы с потоком топика nginx-logs:

```
cat << EOF > /home/kafka/nginx_logs.py
import faust
kafka_broker1 = 'kafka://broker1:9092'
kafka_topic   = 'nginx-logs'
ip            = '135.181.85.130'
app = faust.App(
    'nginx_logs',
    broker = kafka_broker1,
    value_serializer='raw',
)
topic = app.topic(kafka_topic)
@app.agent(topic)
async def rec(records):
    async for record in records:
        fields = record.decode("utf-8").split(' ')
        if fields[0] == ip:
            print(record.decode("utf-8"))
EOF
chmod 777 /home/kafka/nginx_logs.py
```

Ответьте на контрольные вопросы:
○ Какой IP-адрес отслеживается в логе?

```
ip = '135.181.85.130'
```

○ Какой брокер используется?

```
broker = broker1
```

○ Какой топик используется?

```
kafka_topic = 'nginx-logs'
```

○ По какому символу производится разбивка полей в записи лога?

```
fields = record.decode("utf-8").split(' ') # space character
```

○ В каком поле содержится IP-адрес?

```
fields[0]
```

Модифицируйте скрипт для поиска одного из IP-адресов, встречающегося в логе вашего веб-сервера.
4. На ВМ клиента Kafka-кластера запустите worker для вашего Faust-приложения.

```
#on host - broker1
su - kafka
faust -A nginx_logs worker -l info
...
1.png
```

5. На ВМ брокера Kafka-кластера с помощью утилиты kafka-console-producer.sh импортируйте в Kafka содержимое лога вашего веб-сервера.

```
...
kafka@broker2:~$ /usr/local/kafka/bin/kafka-console-producer.sh --topic 'nginx-logs' --bootstrap-server broker2:9092

```

6. Убедитесь, что вывод worker содержит записи с нужным IP-адресом.

```
2.png
```


