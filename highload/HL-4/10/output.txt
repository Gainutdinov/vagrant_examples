Задание:
1. Что такое JMX?

```
Java Management Extensions - это технология Java, которая предоставляет инструменты для управления и мониторинга приложений, системных объектов, устройств и сервис-ориентированных сетей. Эти ресурсы представлены объектами, называемыми MBeans. В API классы можно динамически загружать и создавать экземпляры
```

2. Как нужно представить JMX Mbean ObjectName?

```
domain: key1 = value1 , key2 = value2
for example:
org.apache: group = SPI, name = TcpDiscoverySpi
```

3. Какие вы знаете наиболее полезные показатели мониторинга Apache Ignite?

```
● Мониторинг количества данных
  ○ Выделенное пространство и фактический размер данных
  ○ Мониторинг использования основной памяти
  ○ Мониторинг размера хранилища данных:
1. Размер постоянного хранилища
2. Размер области данных
3. Размер группы кеша
● Мониторинг контрольно-пропускных операций (checkpointing operations)
● Мониторинг ребалансировки
● Мониторинг топологии
● Мониторинг кэш-областей
● Мониторинг транзакций
● Мониторинг репликаций ЦОД
● Мониторинг клиентских соединений
● Мониторинг очередей сообщений (MQ):
  ○ MQ связей
  ○ MQ обнаружений
```

Сгруппируйте по общим категориям.

4. Возможно ли получить точный размер данных в ОЗУ и на диске?

```
Вообще практически невозможно получить точный размер данных ни в ОЗУ, ни на диске.
```

5. Как оценить размер данных в основной памяти и диске?

```
Эта метрика называется TotalAllocatedSize.
Вы также можете получить оценку фактического размера данных, умножив количество используемых страниц данных на коэффициент заполнения. Коэффициент заполнения - это отношение размера данных на странице к размеру страницы, усредненное по всем страницам. Количество используемых страниц и коэффициент заполнения доступны на уровне показателей области данных.
```

6. Мы решили не использовать группы кэширования. Что произойдет с каждым объектом кэша?

```
Если вы не используете группы кеширования, каждый кеш будет отдельной группой.
```

7. Что такое Экспортер?

```
Экспортер - это специальная реализация SPI (Serial Peripheral Interface), которая экспортирует метрики в различных протоколах.
```

8. Установите и настройте Apache Ignite на одном узле.
9. Запустите узел Apache Ignite с предварительно настроенными кешами.
10. Подключите SQLLINE к узлу Apache Ignite.
11. Создайте две таблицы City и Person, с ключами PRIMARY KEY id, city_id и affinityKey как city_id. Также создайте индексы : idx_city_name ON City, idx_person_name ON Person по name.
12. Заполните таблицы произвольными данными.
13. Запустите VisualVM и проверьте представления VIEWS, CACHES, а также просмотрите историю SQL транзакции.
